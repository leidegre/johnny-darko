{
  "name": "Johnny Darko",
  "semanticHighlighting": true,
  "colors": {
    "editor.background": "#040404",
    "editor.foreground": "#dddddd",
    "editor.selectionHighlightBackground": "#ee660080",
    "editor.selectionHighlightBorder": "#ee6600",
    "editorLineNumber.foreground": "#999999",
    "editorIndentGuide.background1": "#333333",
    "editorIndentGuide.background2": "#333333",
    "editorIndentGuide.background3": "#333333",
    "editorIndentGuide.background4": "#333333",
    "editorIndentGuide.activeBackground1": "#666666",
    "editorIndentGuide.activeBackground2": "#666666",
    "editorIndentGuide.activeBackground3": "#666666",
    "editorIndentGuide.activeBackground4": "#666666",
    "editorWhitespace.foreground": "#222222",
    "editor.lineHighlightBackground": "#ee660020",
    "editor.lineHighlightBorder": "#ee660000",
    "editorBracketMatch.background": "#ee6600",
    "editorBracketMatch.border": "#ee660000",

    // These override the Dark High Contrast chrome
    "activityBar.foreground": "#ee6600",
    "activityBar.inactiveForeground": "#666666",
    "activityBar.background": "#040404",

    "sideBar.background": "#040404",
    "sideBar.foreground": "#666666",

    "list.activeSelectionForeground": "#cccccc",

    "minimap.background": "#04040480",

    // inside the webview there are css variables like
    //  var(--vscode-textPreformat-foreground);
    //  var(--vscode-textPreformat-background);
    "textPreformat.background": "#222222",
    "textPreformat.foreground": "#cccccc"
  },
  "semanticTokenColors": {
    // #1188bb is good color but for what? it's more blue than cyan

    // C++
    // "property": "#aaaaaa", // member variable
    "macro": "#aa4433",
    "namespace": "#888888",
    "type": "#11bbbb",
    "templateType": "#11bbbb",
    "parameter": "#aaddaa", // tint like constant
    // cannot color these appropriately because C++ extension does not provide sematic token modifier for enum
    // "enumMember": "#009900", // constant
    // "enumMember.declaration": "#dddddd", // doesn't work yet...
    // "*.declaration": "#dddddd", // constant
    // C#
    "typeParameter": "#aaddaa",
    "enum": "#11bbbb",
    "class": "#11bbbb",
    "struct": "#11bbbb",
    "interface": "#11bbbb",
    "recordClass": "#11bbbb",
    "recordStruct": "#11bbbb",
    "function.defaultLibrary": "#119999" // slightly darker than type color for builtin types
  },
  "tokenColors": [
    // Parameter
    {
      "scope": "variable.parameter.preprocessor",
      "settings": {
        "foreground": "#aaddaa"
      }
    },
    // Type
    {
      "scope": [
        "storage.type.primitive",
        "storage.modifier",
        "support.type.built-in"
      ],
      "settings": {
        "foreground": "#119999"
      }
    },
    // Preprocessor
    {
      "scope": ["meta.preprocessor"], // applies to all preprocessor content
      "settings": {
        "foreground": "#aaaaaa"
      }
    },
    {
      "scope": ["keyword.control.directive"],
      "settings": {
        "foreground": "#aa7733"
      }
    },
    // Comment
    {
      "scope": ["comment", "punctuation.definition.comment"],
      "settings": {
        "foreground": "#664433"
      }
    },
    // Punctuation
    {
      "scope": [
        "constant.language.nullptr", // nullptr
        "constant.language.undefined", // undefined
        "entity.name.operator.type", // bool
        "keyword.control",
        "keyword.operator",
        "keyword.other",
        "meta.brace.round", // () JavaScript
        "punctuation",
        "storage.type.built-in.primitive", // C void
        "storage.type.enum",
        "storage.type.struct",
        "storage.type.template",
        "storage.type.union",
        "variable.language.this",
      ],
      "settings": {
        "foreground": "#888888"
      }
    },
    // Number
    {
      "scope": ["constant.numeric", "constant.language"],
      "settings": { "foreground": "#00aa00" }
    },
    {
      "scope": "keyword.other.unit.hexadecimal",
      "settings": { "foreground": "#006600" }
    },
    // String
    {
      "scope": "string.quoted",
      "settings": {
        "foreground": "#ffbb00"
      }
    },
    {
      "scope": [
        "string.quoted constant.character.escape",
        "punctuation.definition.string.begin", // first "
        "punctuation.definition.string.end" // last "
      ],
      "settings": {
        "foreground": "#bb8800"
      }
    },
    // Enum definition
    {
      "scope": "meta.enum.definition variable.other",
      "settings": {
        "foreground": "#dddddd"
      }
    },
    // JavaScript shenanigans
    {
      "scope": [
        "source.js storage.type",
        "source.ts storage.type",
        "source.tsx storage.type",
        "source.js support.type",
        "source.ts support.type",
        "source.tsx support.type"
      ],
      "settings": {
        "foreground": "#888888"
      }
    },
    {
      "scope": "string.template",
      "settings": {
        "foreground": "#ffbb00"
      }
    },
    {
      "scope": "string.template variable.other",
      "settings": {
        "foreground": "#dddddd"
      }
    },
    // HLSL shenanigans
    {
      "scope": "source.hlsl storage.type",
      "settings": {
        "foreground": "#888888"
      }
    },
    {
      "scope": "source.hlsl storage.type.basic",
      "settings": {
        "foreground": "#119999"
      }
    },
    {
      "scope": "source.hlsl support.variable.semantic",
      "settings": {
        "foreground": "#aa4433"
      }
    },
    {
      "scope": "source.hlsl support.function",
      "settings": {
        "foreground": "#888888"
      }
    },
    // asciidoc
    {
      "scope": ["markup.heading.marker", "markup.list.bullet"],
      "settings": {
        "foreground": "#888888"
      }
    },
    // JSX
    {
      "scope": "entity.name.tag.tsx",
      "settings": {
        "foreground": "#aa4433"
      }
    },
    {
      "scope": "entity.other.attribute-name.tsx",
      "settings": {
        "foreground": "#662211"
      }
    },
    // Lua
    {
      "scope": "keyword.local.lua",
      "settings": {
        "foreground": "#888888"
      }
    },
  ]
}
